/**
 *
 * auto generated by ibatis tools 
 *
 **/
package com.pay.txncore.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.pay.inf.dao.impl.BaseDAOImpl;
import com.pay.txncore.dao.PaymentOrderDAO;
import com.pay.txncore.model.PaymentOrder;

public class PaymentOrderDAOImpl extends BaseDAOImpl<PaymentOrder> implements
		PaymentOrderDAO {

	@Override
	public List<PaymentOrder> queryByTradeOrderNo(Long tradeOrderNo) {

		return super.findByCriteria("queryByTradeOrderNo", tradeOrderNo);
	}

	@Override
	public Long queryRefundAmountByTradeOrderNo(Long tradeOrderNo) {
		Long refundAmountTotal = (Long) getSqlMapClientTemplate()
				.queryForObject("paymentOrder.queryRefundAmount", tradeOrderNo);
		return refundAmountTotal;
	}

	@Override
	public List<PaymentOrder> queryPaymentOrderModelByTradeOrderNo(
			Long tradeOrderNo) {
		PaymentOrder order = new PaymentOrder();
		order.setTradeOrderNo(tradeOrderNo);
		List<PaymentOrder> paymentOrders = super.findByCriteria(
				"findBySelective", order);
		return paymentOrders;
	}

	@Override
	public PaymentOrder queryByTradeOrderAndStatus(Long tradeOrderNo,
			String status) {
		Map<String, String> queryParams = new HashMap<String, String>();
		queryParams.put("tradeOrderNo", String.valueOf(tradeOrderNo));
		queryParams.put("status", status);
		PaymentOrder paymentOrder = (PaymentOrder) getSqlMapClientTemplate()
				.queryForObject("paymentOrder.queryByTradeOrderAndStatus",
						queryParams);
		return paymentOrder;
	}
}