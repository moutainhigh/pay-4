<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CLEAR_LOG">
    <resultMap class="com.pay.txncore.crosspay.model.ClearLog" id="BaseResultMap">
      <result column="ID" jdbcType="DECIMAL" property="id" />
      <result column="PARTNER_ID" jdbcType="VARCHAR" property="partnerId" />
      <result column="MAY_CLEAR_AMOUNT" jdbcType="DECIMAL" property="mayClearAmount" />
      <result column="REFUND_AMOUNT" jdbcType="DECIMAL" property="refundAmount" />
      <result column="REFUSE_PAYMENT_AMOUNT" jdbcType="DECIMAL" property="refusePaymentAmount" />
      <result column="FROZEN_AMOUNT" jdbcType="DECIMAL" property="frozenAmount" />
      <result column="UNFROZEN_AMOUNT" jdbcType="DECIMAL" property="unfrozenAmount" />
      <result column="PLEDGE_AMOUNT" jdbcType="DECIMAL" property="pledgeAmount" />
      <result column="CLEAR_AMOUNT" jdbcType="DECIMAL" property="clearAmount" />
      <result column="REMARK" jdbcType="VARCHAR" property="remark" />
      <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
      <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
      <result column="TRADE_DATE" jdbcType="TIMESTAMP" property="tradeDate" />
    </resultMap>
    <sql id="CLEAR_LOG.Example_Where_Clause">
      <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
        <isEqual compareValue="true" property="oredCriteria[].valid">
          (
          <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
            <![CDATA[ $oredCriteria[].criteriaWithoutValue[]$ ]]>
          </iterate>
          <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
            <![CDATA[ $oredCriteria[].criteriaWithSingleValue[].condition$ #oredCriteria[].criteriaWithSingleValue[].value# ]]>
          </iterate>
          <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
            <![CDATA[ $oredCriteria[].criteriaWithListValue[].condition$ ]]>
            <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
              <![CDATA[ #oredCriteria[].criteriaWithListValue[].values[]# ]]>
            </iterate>
          </iterate>
          <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
            <![CDATA[
            $oredCriteria[].criteriaWithBetweenValue[].condition$
            #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
            #oredCriteria[].criteriaWithBetweenValue[].values[1]#
            ]]>
          </iterate>
          )
        </isEqual>
      </iterate>
    </sql>
    <sql id="CLEAR_LOG.oracle_Pagination_Head">
      <dynamic>
        <isNotEmpty property="oracleStart">
          <isNotEmpty property="oracleEnd">
            <![CDATA[ select * from ( select row_.*, rownum rownum_ from ( ]]>
          </isNotEmpty>
        </isNotEmpty>
      </dynamic>
    </sql>
    <sql id="CLEAR_LOG.oracle_Pagination_Tail">
      <dynamic>
        <isNotEmpty property="oracleStart">
          <isNotEmpty property="oracleEnd">
            <![CDATA[ ) row_ where rownum <= #oracleEnd# ) where rownum_ > #oracleStart# ]]>
          </isNotEmpty>
        </isNotEmpty>
      </dynamic>
    </sql>
    <sql id="CLEAR_LOG.Base_Column_List">
      ID, PARTNER_ID, MAY_CLEAR_AMOUNT, REFUND_AMOUNT, REFUSE_PAYMENT_AMOUNT, FROZEN_AMOUNT, 
      UNFROZEN_AMOUNT, PLEDGE_AMOUNT, CLEAR_AMOUNT, REMARK, CREATE_DATE, UPDATE_DATE, TRADE_DATE
    </sql>
    <select id="CLEAR_LOG.selectByExample" parameterClass="com.pay.txncore.crosspay.model.ClearLogCriteria" resultMap="BaseResultMap">
      <include refid="CLEAR_LOG.oracle_Pagination_Head" />
      select
      <isParameterPresent>
        <isEqual compareValue="true" property="distinct">
          distinct
        </isEqual>
      </isParameterPresent>
      <include refid="CLEAR_LOG.Base_Column_List" />
      from CLEAR_LOG
      <isParameterPresent>
        <include refid="CLEAR_LOG.Example_Where_Clause" />
        <isNotNull property="orderByClause">
          <![CDATA[ order by $orderByClause$ ]]>
        </isNotNull>
      </isParameterPresent>
      <include refid="CLEAR_LOG.oracle_Pagination_Tail" />
    </select>
    <select id="CLEAR_LOG.selectByPrimaryKey" parameterClass="com.pay.txncore.crosspay.model.ClearLog" resultMap="BaseResultMap">
      select 
      <include refid="CLEAR_LOG.Base_Column_List" />
      <![CDATA[
      from CLEAR_LOG
      where ID = #id:DECIMAL#
      ]]>
    </select>
    <select id="findById" resultMap="BaseResultMap" parameterClass="long" >
      select 
      <include refid="CLEAR_LOG.Base_Column_List" />
      <![CDATA[
      from CLEAR_LOG
      where ID = #id:DECIMAL#
      ]]>
    </select>
    <insert id="CLEAR_LOG.insert" parameterClass="com.pay.txncore.crosspay.model.ClearLog">
      <![CDATA[
      insert into CLEAR_LOG (ID, PARTNER_ID, MAY_CLEAR_AMOUNT, REFUND_AMOUNT, 
        REFUSE_PAYMENT_AMOUNT, FROZEN_AMOUNT, UNFROZEN_AMOUNT, 
        PLEDGE_AMOUNT, CLEAR_AMOUNT, REMARK, CREATE_DATE, 
        UPDATE_DATE, TRADE_DATE)
      values (#id:DECIMAL#, #partnerId:VARCHAR#, #mayClearAmount:DECIMAL#, #refundAmount:DECIMAL#, 
        #refusePaymentAmount:DECIMAL#, #frozenAmount:DECIMAL#, #unfrozenAmount:DECIMAL#, 
        #pledgeAmount:DECIMAL#, #clearAmount:DECIMAL#, #remark:VARCHAR#, #createDate:TIMESTAMP#, 
        #updateDate:TIMESTAMP#, #tradeDate:TIMESTAMP#)
      ]]>
    </insert>
    <insert id="CLEAR_LOG.insertSelective" parameterClass="com.pay.txncore.crosspay.model.ClearLog">
      insert into CLEAR_LOG
      <dynamic prepend="(">
        <isNotNull prepend="," property="id">
          ID
        </isNotNull>
        <isNotNull prepend="," property="partnerId">
          PARTNER_ID
        </isNotNull>
        <isNotNull prepend="," property="mayClearAmount">
          MAY_CLEAR_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="refundAmount">
          REFUND_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="refusePaymentAmount">
          REFUSE_PAYMENT_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="frozenAmount">
          FROZEN_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="unfrozenAmount">
          UNFROZEN_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="pledgeAmount">
          PLEDGE_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="clearAmount">
          CLEAR_AMOUNT
        </isNotNull>
        <isNotNull prepend="," property="remark">
          REMARK
        </isNotNull>
        <isNotNull prepend="," property="createDate">
          CREATE_DATE
        </isNotNull>
        <isNotNull prepend="," property="updateDate">
          UPDATE_DATE
        </isNotNull>
        <isNotNull prepend="," property="tradeDate">
          TRADE_DATE
        </isNotNull>
        )
      </dynamic>
      values
      <dynamic prepend="(">
        <isNotNull prepend="," property="id">
          <![CDATA[ #id:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="partnerId">
          <![CDATA[ #partnerId:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="mayClearAmount">
          <![CDATA[ #mayClearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="refundAmount">
          <![CDATA[ #refundAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="refusePaymentAmount">
          <![CDATA[ #refusePaymentAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="frozenAmount">
          <![CDATA[ #frozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="unfrozenAmount">
          <![CDATA[ #unfrozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="pledgeAmount">
          <![CDATA[ #pledgeAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="clearAmount">
          <![CDATA[ #clearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="remark">
          <![CDATA[ #remark:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="createDate">
          <![CDATA[ #createDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="updateDate">
          <![CDATA[ #updateDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="tradeDate">
          <![CDATA[ #tradeDate:TIMESTAMP# ]]>
        </isNotNull>
        )
      </dynamic>
    </insert>
    <select id="CLEAR_LOG.countByExample" parameterClass="com.pay.txncore.crosspay.model.ClearLogCriteria" resultClass="java.lang.Integer">
      select count(*) from CLEAR_LOG
      <include refid="CLEAR_LOG.Example_Where_Clause" />
    </select>
    <update id="CLEAR_LOG.updateByExampleSelective">
      update CLEAR_LOG
      <dynamic prepend="set">
        <isNotNull prepend="," property="record.id">
          <![CDATA[ ID = #record.id:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.partnerId">
          <![CDATA[ PARTNER_ID = #record.partnerId:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.mayClearAmount">
          <![CDATA[ MAY_CLEAR_AMOUNT = #record.mayClearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.refundAmount">
          <![CDATA[ REFUND_AMOUNT = #record.refundAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.refusePaymentAmount">
          <![CDATA[ REFUSE_PAYMENT_AMOUNT = #record.refusePaymentAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.frozenAmount">
          <![CDATA[ FROZEN_AMOUNT = #record.frozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.unfrozenAmount">
          <![CDATA[ UNFROZEN_AMOUNT = #record.unfrozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.pledgeAmount">
          <![CDATA[ PLEDGE_AMOUNT = #record.pledgeAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.clearAmount">
          <![CDATA[ CLEAR_AMOUNT = #record.clearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.remark">
          <![CDATA[ REMARK = #record.remark:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.createDate">
          <![CDATA[ CREATE_DATE = #record.createDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.updateDate">
          <![CDATA[ UPDATE_DATE = #record.updateDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="record.tradeDate">
          <![CDATA[ TRADE_DATE = #record.tradeDate:TIMESTAMP# ]]>
        </isNotNull>
      </dynamic>
      <isParameterPresent>
        <include refid="CLEAR_LOG.Example_Where_Clause" />
      </isParameterPresent>
    </update>
    <update id="CLEAR_LOG.updateByExample">
      <![CDATA[
      update CLEAR_LOG
      set ID = #record.id:DECIMAL#,
        PARTNER_ID = #record.partnerId:VARCHAR#,
        MAY_CLEAR_AMOUNT = #record.mayClearAmount:DECIMAL#,
        REFUND_AMOUNT = #record.refundAmount:DECIMAL#,
        REFUSE_PAYMENT_AMOUNT = #record.refusePaymentAmount:DECIMAL#,
        FROZEN_AMOUNT = #record.frozenAmount:DECIMAL#,
        UNFROZEN_AMOUNT = #record.unfrozenAmount:DECIMAL#,
        PLEDGE_AMOUNT = #record.pledgeAmount:DECIMAL#,
        CLEAR_AMOUNT = #record.clearAmount:DECIMAL#,
        REMARK = #record.remark:VARCHAR#,
        CREATE_DATE = #record.createDate:TIMESTAMP#,
        UPDATE_DATE = #record.updateDate:TIMESTAMP#,
        TRADE_DATE = #record.tradeDate:TIMESTAMP#
      ]]>
      <isParameterPresent>
        <include refid="CLEAR_LOG.Example_Where_Clause" />
      </isParameterPresent>
    </update>
    <update id="CLEAR_LOG.updateByPrimaryKeySelective" parameterClass="com.pay.txncore.crosspay.model.ClearLog">
      update CLEAR_LOG
      <dynamic prepend="set">
        <isNotNull prepend="," property="partnerId">
          <![CDATA[ PARTNER_ID = #partnerId:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="mayClearAmount">
          <![CDATA[ MAY_CLEAR_AMOUNT = #mayClearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="refundAmount">
          <![CDATA[ REFUND_AMOUNT = #refundAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="refusePaymentAmount">
          <![CDATA[ REFUSE_PAYMENT_AMOUNT = #refusePaymentAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="frozenAmount">
          <![CDATA[ FROZEN_AMOUNT = #frozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="unfrozenAmount">
          <![CDATA[ UNFROZEN_AMOUNT = #unfrozenAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="pledgeAmount">
          <![CDATA[ PLEDGE_AMOUNT = #pledgeAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="clearAmount">
          <![CDATA[ CLEAR_AMOUNT = #clearAmount:DECIMAL# ]]>
        </isNotNull>
        <isNotNull prepend="," property="remark">
          <![CDATA[ REMARK = #remark:VARCHAR# ]]>
        </isNotNull>
        <isNotNull prepend="," property="createDate">
          <![CDATA[ CREATE_DATE = #createDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="updateDate">
          <![CDATA[ UPDATE_DATE = #updateDate:TIMESTAMP# ]]>
        </isNotNull>
        <isNotNull prepend="," property="tradeDate">
          <![CDATA[ TRADE_DATE = #tradeDate:TIMESTAMP# ]]>
        </isNotNull>
      </dynamic>
      <![CDATA[
      where ID = #id:DECIMAL#
      ]]>
    </update>
    <update id="CLEAR_LOG.updateByPrimaryKey" parameterClass="com.pay.txncore.crosspay.model.ClearLog">
      <![CDATA[
      update CLEAR_LOG
      set PARTNER_ID = #partnerId:VARCHAR#,
        MAY_CLEAR_AMOUNT = #mayClearAmount:DECIMAL#,
        REFUND_AMOUNT = #refundAmount:DECIMAL#,
        REFUSE_PAYMENT_AMOUNT = #refusePaymentAmount:DECIMAL#,
        FROZEN_AMOUNT = #frozenAmount:DECIMAL#,
        UNFROZEN_AMOUNT = #unfrozenAmount:DECIMAL#,
        PLEDGE_AMOUNT = #pledgeAmount:DECIMAL#,
        CLEAR_AMOUNT = #clearAmount:DECIMAL#,
        REMARK = #remark:VARCHAR#,
        CREATE_DATE = #createDate:TIMESTAMP#,
        UPDATE_DATE = #updateDate:TIMESTAMP#,
        TRADE_DATE = #tradeDate:TIMESTAMP#
      where ID = #id:DECIMAL#
      ]]>
    </update>
    
    <select id="CLEAR_LOG.queryClearLog" resultMap="BaseResultMap"
		parameterClass="java.util.Map">
		select
		<include refid="CLEAR_LOG.Base_Column_List" />
		from CLEAR_LOG cl
		WHERE cl.PARTNER_ID = #memberCode#
		<dynamic>
			<isNotNull prepend="and" property="startTime">
				cl.TRADE_DATE <![CDATA[>=]]>
				to_date(#startTime#,'yyyy/mm/dd hh24:mi:ss')
			</isNotNull>
			<isNotNull prepend="and" property="endTime">
				cl.TRADE_DATE <![CDATA[<=]]>
				to_date(#endTime#,'yyyy/mm/dd hh24:mi:ss')
			</isNotNull>
		</dynamic>
		order by cl.TRADE_DATE desc
	</select>
	
	<select id="CLEAR_LOG.queryClearLogCount" resultClass="java.lang.Integer"
        parameterClass="java.util.Map">
        SELECT COUNT(ID) AS TOTAL_NUM 
      	from CLEAR_LOG cl
		WHERE cl.PARTNER_ID = #memberCode#
        <dynamic>
			<isNotNull prepend="and" property="startTime">
				cl.TRADE_DATE <![CDATA[>=]]>
				to_date(#startTime#,'yyyy/mm/dd hh24:mi:ss')
			</isNotNull>
			<isNotNull prepend="and" property="endTime">
				cl.TRADE_DATE <![CDATA[<=]]>
				to_date(#endTime#,'yyyy/mm/dd hh24:mi:ss')
			</isNotNull>
		</dynamic>
    </select>
  </sqlMap>