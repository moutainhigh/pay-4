/**
 *
 * auto generated by ibatis tools 
 *
 **/
package com.pay.txncore.dao;

import java.util.List;
import java.util.Map;

import com.pay.inf.dao.BaseDAO;
import com.pay.inf.dao.Page;
import com.pay.txncore.model.DepositOrder;
import com.pay.txncore.model.DepositOrderDetail;

public interface DepositOrderDAO extends BaseDAO {

	/**
	 * 更新金额
	 * 
	 * @param depositOrderNo
	 * @param amount
	 * @param opeate
	 * @return
	 */
	boolean updateAmount(Long depositOrderNo, Long amount, Integer opeate);

	/**
	 * 充值订单更新
	 */

	void updateOrgCode(String orgcode, Long id);

	/**
	 * 根据支付订单流水号获取充值订单
	 */

	DepositOrder queryDepositOrderForUpdate(Long paymentOrderNo);

	/**
	 * 查找并锁行行记录
	 * 
	 * @param depositOrderNo
	 * @return
	 */
	DepositOrder findAndLockById(Long depositOrderNo);

	/**
	 * 查找并锁行行记录
	 * 
	 * @param depositOrderNo
	 * @return
	 */
	DepositOrder findByPaymentOrderNo(Long paymentOrderNo);

	/**
	 * 分页查询充值记录
	 * 
	 * @param modelParamMap
	 *            查询条件
	 * @param pageSize
	 *            每页记录数
	 * @param pageNo当前页
	 * @return
	 * @throws Exception
	 */
	List<DepositOrderDetail> queryDepositOrder(Map<String, Object> paramMap,
			Page page) throws Exception;

	/**
	 * 根据条件查询充值记录总记录数
	 * 
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	String[] countQueryDepositOrder(Map<String, Object> paramMap)
			throws Exception;

	/**
	 * 查询充值明细
	 * 
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	DepositOrderDetail queryDepositOrderDetail(Map<String, Object> paramMap)
			throws Exception;

	/**
	 * 根据客户账户号和资金机构代码查询记录
	 * 
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	DepositOrder findByCustomerAndOrgcode(Map<String, Object> paramMap)
			throws Exception;
}