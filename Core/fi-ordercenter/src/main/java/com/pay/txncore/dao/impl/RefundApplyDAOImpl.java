/**
 *
 * auto generated by ibatis tools 
 *
 **/
package com.pay.txncore.dao.impl;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

import com.pay.inf.dao.impl.BaseDAOImpl;
import com.pay.txncore.dao.RefundApplyDAO;
import com.pay.txncore.model.RefundApply;

public class RefundApplyDAOImpl extends BaseDAOImpl<RefundApply> implements
		RefundApplyDAO {

	@Override
	public List<RefundApply> queryRefundApplyList(Map param, int pageSize,
			int page) {
		int page_offset = (page - 1) * pageSize;
		List<RefundApply> list = getSqlMapClientTemplate().queryForList(
				"refundApply.queryRefundApplyList", param, page_offset,
				pageSize);
		return list;
	}

	@Override
	public String[] totalItemNumAndAmount(Map param) {
		Map retMap = (Map) getSqlMapClientTemplate().queryForObject(
				"refundApply.querytotalItemNumAndAmount", param);
		if (retMap == null)
			return null;
		String[] ret = new String[2];
		ret[0] = retMap.get("ITEM_NUM").toString();

		String tmp = retMap.get("APPLY_AMOUNT").toString();
		ret[1] = new BigDecimal(tmp).divide(new BigDecimal(1000))
				.setScale(2, BigDecimal.ROUND_HALF_UP).toString();

		return ret;
	}

	@Override
	public boolean modifyApply(RefundApply refundApply) {
		RefundApply refundApplyModel = this.findById(refundApply
				.getRefundApplyNo());
		refundApplyModel.setStatus(refundApply.getStatus());
		refundApplyModel.setActualAmount(refundApply.getActualAmount());
		refundApplyModel.setAuditOperator(refundApply.getAuditOperator());
		refundApplyModel.setRefundOrderNo(refundApply.getRefundOrderNo());
		refundApplyModel.setRemark2(refundApply.getRemark2());
		return this.update(refundApplyModel);
	}

}