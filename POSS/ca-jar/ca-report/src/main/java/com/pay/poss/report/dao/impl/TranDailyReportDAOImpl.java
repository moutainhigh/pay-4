/**
 *
 * auto generated by ibatis tools 
 *
 **/
package com.pay.poss.report.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.axis.wsdl.symbolTable.Parameter;

import com.pay.inf.dao.Page;
import com.pay.inf.dao.impl.BaseDAOImpl;
import com.pay.poss.report.dao.TranDailyReportDAO;
import com.pay.poss.report.dto.TranDailyReportDto;
import com.pay.poss.report.dto.TranDailyReportResultDto;

public class TranDailyReportDAOImpl extends BaseDAOImpl  implements TranDailyReportDAO {

	public List<TranDailyReportResultDto> queryTranDailyReportSum(String beginTime,
			String endTime,TranDailyReportDto reportvo) {
		Map<String, Object> prameters=new HashMap();
		prameters.put("orgCode", reportvo.getOrgCode());
		prameters.put("partnerId", reportvo.getPartnerId());
		prameters.put("beginTime", beginTime);
		prameters.put("endTime", endTime);
		prameters.put("reconciliationFlg", reportvo.getReconciliationFlg());
		prameters.put("settlementFlg", reportvo.getSettlementFlg());
		prameters.put("assuresettlementFlg", reportvo.getAssuresettlementFlg());
		prameters.put("payType", reportvo.getPayType());
		
		List<TranDailyReportResultDto> list=(List<TranDailyReportResultDto>) super.findByCriteria("queryTranDailyReportSum", prameters);
		return list;
	}
	@Override
	public Page<TranDailyReportResultDto> queryTranDailyReportDetail(Page<TranDailyReportResultDto> page,String beginTime,
			String endTime, TranDailyReportDto reportvo) {
		Map<String, Object> prameters=new HashMap();
		prameters.put("orgCode", reportvo.getOrgCode());
		prameters.put("partnerId", reportvo.getPartnerId());
		prameters.put("beginTime", beginTime);
		prameters.put("endTime", endTime);
		prameters.put("reconciliationFlg", reportvo.getReconciliationFlg());
		prameters.put("settlementFlg", reportvo.getSettlementFlg());
		prameters.put("assuresettlementFlg", reportvo.getAssuresettlementFlg());
		prameters.put("payType", reportvo.getPayType());
		prameters.put("currencyCode", reportvo.getCurrencyCode()) ;
		prameters.put("payCurrencyCode", reportvo.getPayCurrencyCode()) ;
		
		return super.findByQuery("queryTranDailyReportDetail", page, prameters);
	}
	@Override
	public Page<TranDailyReportResultDto> queryTranDailyReportSum(
			Page<TranDailyReportResultDto> page, String beginTime, String endTime,
			TranDailyReportDto reportvo) {
		Map<String, Object> prameters=new HashMap();
		prameters.put("orgCode", reportvo.getOrgCode());
		prameters.put("partnerId", reportvo.getPartnerId());
		prameters.put("beginTime", beginTime);
		prameters.put("endTime", endTime);
		prameters.put("reconciliationFlg", reportvo.getReconciliationFlg());
		prameters.put("settlementFlg", reportvo.getSettlementFlg());
		prameters.put("assuresettlementFlg", reportvo.getAssuresettlementFlg());
		prameters.put("payType", reportvo.getPayType());
		
		return super.findByQuery("queryTranDailyReportSum", page, prameters);
	}
	
	
	@Override
	public List<TranDailyReportResultDto> queryTranDailyReportDetail(
			String beginTime, String endTime, TranDailyReportDto reportvo) {
		Map<String, Object> prameters=new HashMap();
		prameters.put("orgCode", reportvo.getOrgCode());
		prameters.put("partnerId", reportvo.getPartnerId());
		prameters.put("beginTime", beginTime);
		prameters.put("endTime", endTime);
		prameters.put("reconciliationFlg", reportvo.getReconciliationFlg());
		prameters.put("settlementFlg", reportvo.getSettlementFlg());
		prameters.put("assuresettlementFlg", reportvo.getAssuresettlementFlg());
		prameters.put("payType", reportvo.getPayType());
		List<TranDailyReportResultDto> list=(List<TranDailyReportResultDto>) super.findByCriteria("queryTranDailyReportDetail", prameters);
		return list;
	}
	
}