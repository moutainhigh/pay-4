<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="user">
	<typeAlias alias="user" type="com.pay.poss.systemmanager.model.Users" />
	<typeAlias alias="userForm" type="com.pay.poss.systemmanager.formbean.UserFormBean" />
	<typeAlias alias="duty" type="com.pay.poss.systemmanager.model.Duty" />
	<typeAlias alias="org" type="com.pay.poss.systemmanager.model.Org" />
	<typeAlias alias="userRelation" type="com.pay.poss.systemmanager.formbean.UserRelation" />
	
	
	
   <select id="findLayerById" parameterClass="java.lang.Long" resultClass="userRelation">
   				SELECT id,login_id as loginId,name as name,p_login_id as ploginId,p_name as pname
				,lv as lv ,rv as rv,layer as layer,createdate as createDate
				 FROM userrelation u where layer = #id#
   </select>
	
   <select id="findUseRelationById" parameterClass="java.lang.String" resultClass="userRelation">
   			SELECT 
   			LOGIN_ID loginId,
   			NAME name,
   			LAYER layer,
   			ID id
   			FROM
   			USERRELATION
   			WHERE 
   			ID = #layer#
   </select>
   
	<insert id="create" parameterClass="user">
		<selectKey resultClass="Long" keyProperty="userKy">
			SELECT SEQ_USERS_USERKY.NEXTVAL AS ID FROM DUAL 
		</selectKey>
        INSERT INTO 
        	USERS 
        	(
        	  USER_KY,           
			  LOGIN_ID,          
			  LOGIN_CHANNEL,     
			  PASSWORD,         
			  LAST_LOGIN_TIME,   
			  LAST_LOGIN_IP,     
			  PSWD_EXPIRED_TIME, 
			  ALLOW_IP,          
			  STATUS,
			  email,    
			  phone ,   
			 mobile,   
				name,     
			rtx_Code,
			org_code,
			duty_code
            )
        	VALUES 
        	(
	       		#userKy#,
				#loginId#,
				#loginChannel#,
				#password#,
				#lastLoginTime#,
				#lastLoginIp#,
				#pswdExpiredTime#,
				#allowIp#,
				#status#,
				#userEmail#,
				#userPhone#,
				#userMobile#,
				#userName#,
				#userRTX#,
				#orgCode#,
				#dutyCode#
				 
        	)
    </insert>
    <insert id="saveUserRelation" parameterClass="userRelation">
	    <selectKey resultClass="Long" keyProperty="id">
			SELECT SEQ_USERS_USERRELATIONKY.NEXTVAL AS ID FROM DUAL 
		</selectKey>
	     INSERT INTO USERRELATION
	     (
	     ID,
	     LOGIN_ID,
	     NAME,
	     LAYER,
	     CREATEDATE
	     )
	     VALUES
	     (
	     #id#,
	     #loginId#,
	     #name#,
	     #layer#,
	     #createDate#
	     )
    </insert>
    <update id="updateUserRelation" parameterClass="userRelation" >
     UPDATE USERRELATION  SET 
    	NAME=#name#,
    	LAYER=#layer#
    	WHERE LOGIN_ID=#loginId#
    </update>
    
    <select id="findUserRelation" parameterClass="java.lang.String" resultClass="userRelation" >
    	SELECT  ID,
	     LOGIN_ID loginId,
	     NAME name,
	     LAYER layer,
	     CREATEDATE createDate
	      FROM USERRELATION WHERE  LOGIN_ID=#loginId#
	</select>    
	
	<select id="getBDName" resultClass="userRelation">
		SELECT  
		ID id,
    	LOGIN_ID loginId,
   		NAME  name
		FROM USERRELATION
	</select>
	<select id="getLeader" resultClass="userRelation">
		SELECT  
		ID id,
    	LOGIN_ID loginId,
   		NAME  name
		FROM USERRELATION
		WHERE LAYER IS NULL
	</select>
				
    <select id="allUser" resultClass="user">
    	SELECT 
    		USER_KY as userKy,
			LOGIN_ID as loginId,
			LOGIN_CHANNEL as loginChannel,
			PASSWORD as password,
			LAST_LOGIN_TIME as lastLoginTime,
			LAST_LOGIN_IP as lastLoginIp,
			PSWD_EXPIRED_TIME as pswdExpiredTime,
			ALLOW_IP as allowIp,
			FAIL_LOGIN_NUM as failLoginNum,
			STATUS as status,
			 u.name      AS userName,
		       u.email     AS userEmail,
		       u.phone     As userPhone,
		       u.mobile    AS userMobile,
		       u.rtx_Code  AS userRTX,
		       u.org_code as orgCode,
		       u.duty_code as dutyCode
    	FROM 
    		USERS u
    </select>
    
    <select id="search" resultClass="userForm" parameterClass="java.util.Map">
      select
   u.user_ky AS userKy, 
   u.name AS userName,
    o.org_name AS userOrgName,
    u.email AS userEmail,
    d.duty_name AS userDutyName,
    u.login_id AS userCode,
    u.password AS userPassword,
    u.status AS userStatus, 
    to_char(u.last_login_time,'yyyy-mm-dd hh24:mi:ss') AS lastLoginTime 
    from users u 
    left join org o on (u.org_code = o.org_code )  
    left join duty d on (u.duty_code = d.duty_code) 
  
    where 1=1
    <isNotNull property="userName">  
		 and   u.name like  #userName#||'%'
		</isNotNull> 
   <isNotNull  property="userId">  
		and	u.login_id like #userId#||'%'
		 </isNotNull>
		 <isNotNull property="status">  
		and	u.STATUS = #status#
		 </isNotNull>
  
  
    </select>
    
    
    <select id="search_COUNT" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		select
		count(*)
		 from users u 
    left join org o on (u.org_code = o.org_code )  
    left join duty d on (u.duty_code = d.duty_code) 
    where 1=1
    <isNotNull property="userName">  
				 and   u.name like  #userName#||'%'
		</isNotNull> 
   <isNotNull  property="userId">  
		and	u.login_id like #userId#||'%'
		 </isNotNull>
		 <isNotNull property="status">  
		and	u.STATUS = #status#
		 </isNotNull>
    </select>
    
    
    <select id="queryAllDuty" resultClass="duty">
    	SELECT 
    	  DUTY_KY AS dutyKy,
    	   DUTY_CODE AS dutyCode,           
		  DUTY_NAME AS dutyName
		FROM
		   DUTY
		   order by dutyCode desc
    </select>
    
     <select id="queryAllOrg" resultClass="org">
    	SELECT 
    	  ORG_KY AS orgKy,
    	  ORG_CODE AS orgCode,              
		  ORG_NAME AS orgName
		FROM
		   ORG   order by orgCode desc
    </select>
    
    
    
    <delete id="deleteAll" parameterClass="java.lang.String">
    	DELETE FROM 
    		USERS
        WHERE 
        	USER_KY = #userKy#
    </delete>
    
    <select id="queryUserByKy" resultClass="userForm" parameterClass="user">
	  select u.user_ky   AS userId,
      
       u.LOGIN_ID  AS userCode,
       u.password  As userPassword,
       u.STATUS    as userStatus,
       u.org_code  as userOrgCode,
       o.org_name  AS userOrgName,
       u.duty_code AS userDutyCode,
       d.duty_name AS userDutyName,
 	   u.name      AS userName,
       u.email     AS userEmail,
       u.phone     As userPhone,
       u.mobile    AS userMobile,
       u.rtx_Code  AS userRTX

  from users u
  left join org o
    on (u.org_code = o.org_code)
  left join duty d
    on (u.duty_code = d.duty_code)
    where 
		 <isNotNull property="userKy">  
			 USER_KY = #userKy#
		</isNotNull> 
	
		
    </select>
    
    <select id="findById" resultClass="user" parameterClass="java.lang.Long">
        SELECT
        	USER_KY AS userKy, 
			LOGIN_ID as loginId,
			LOGIN_CHANNEL as loginChannel,
			PASSWORD as password,
			LAST_LOGIN_TIME as lastLoginTime,
			LAST_LOGIN_IP as lastLoginIp,
			PSWD_EXPIRED_TIME as pswdExpiredTime,
			ALLOW_IP as allowIp,
			FAIL_LOGIN_NUM as failLoginNum,
			STATUS as status,
			u.name      AS userName,
		    u.email     AS userEmail,
		    u.phone     As userPhone,
		    u.mobile    AS userMobile,
		    u.rtx_Code  AS userRTX,
		    u.org_code as orgCode,
		    u.duty_code as dutyCode
        FROM 
        	USERS u
        WHERE 
        	USER_KY = #userKy#
    </select>
    
    <update id="delete" parameterClass="user">
        UPDATE 
        	USERS
        SET 
			STATUS = #status#
    	WHERE 
        	USER_KY = #userKy#
    </update>
    
    <update id="update" parameterClass="user">
        UPDATE 
        	USERS
        SET 
			LOGIN_ID = #loginId#,
			LOGIN_CHANNEL = #loginChannel#,
			<isNotEmpty property="password" >
				PASSWORD = #password#,
			</isNotEmpty>
			PSWD_EXPIRED_TIME = #pswdExpiredTime#,
			ALLOW_IP = #allowIp#,
			FAIL_LOGIN_NUM = #failLoginNum#,
			STATUS = #status#,
			email  = #userEmail#,
       		phone   = #userPhone#,
       		mobile   = #userMobile#,
       		rtx_Code = #userRTX#,
       		org_code = #orgCode#,
       		duty_code = #dutyCode#,
       		name = #userName#
    	WHERE 
        	USER_KY = #userKy#
    </update>
    
     <update id="updatePassword" parameterClass="user">
        UPDATE 
        	USERS
        SET 
			PASSWORD = #password#
    	WHERE 
        	USER_KY = #userKy#
    </update>
    
    <!-- select id="queryUsersByFlowName" resultClass="user" parameterClass="java.util.Map">
       SELECT us.USER_KY as userKy,
        us.LOGIN_ID as loginId,
        us.LOGIN_CHANNEL as loginChannel,
        us.PASSWORD as password,
        us.LAST_LOGIN_TIME as lastLoginTime,
        us.LAST_LOGIN_IP as lastLoginIp,
        us.PSWD_EXPIRED_TIME as pswdExpiredTime,
        us.ALLOW_IP as allowIp,
        us.FAIL_LOGIN_NUM as failLoginNum,
        us.STATUS as status from users us 
	join
	(
	select distinct uso.user_ky
	from (
	select distinct rwi.role_ky,rwi.node_ky
	      from ROLE_WORKFLOW rwi) rw
	      join role r  on rw.role_ky = r.role_ky
	  join RES_WORKFLOW rew   on rew.node_ky = rw.node_ky
	      join user_role ur on ur.role_ky =  rw.role_ky 
	      join users uso on ur.user_ky = uso.user_ky 
	     WHERE 1 = 1
	      <isNotNull property="wokeflowName">
			  	 and rew.workflow_name = #wokeflowName# 
			   </isNotNull>    
			   <isNotNull property="nodeName"> 
			   	and rew.node_name = #nodeName#
			   </isNotNull>
	         ) bast_t
	         on (bast_t.user_ky = us.user_ky)
		 	
    </select-->
    
    <select id="findByLoginId" resultClass="user" parameterClass="string">
        SELECT
        	USER_KY AS userKy, 
			LOGIN_ID as loginId,
			LOGIN_CHANNEL as loginChannel,
			PASSWORD as password,
			LAST_LOGIN_TIME as lastLoginTime,
			LAST_LOGIN_IP as lastLoginIp,
			PSWD_EXPIRED_TIME as pswdExpiredTime,
			ALLOW_IP as allowIp,
			FAIL_LOGIN_NUM as failLoginNum,
			STATUS as status,
			u.name      AS userName,
		    u.email     AS userEmail,
		    u.phone     As userPhone,
		    u.mobile    AS userMobile,
		    u.rtx_Code  AS userRTX,
		    u.org_code as orgCode,
		    u.duty_code as dutyCode
        FROM 
        	USERS u
        WHERE 
        	LOGIN_ID = #loginId#
    </select>
</sqlMap>