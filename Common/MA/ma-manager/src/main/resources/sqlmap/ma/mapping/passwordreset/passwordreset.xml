<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="passwordreset">
	<typeAlias alias="passwordReset" type="com.pay.poss.passwordreset.model.PasswordReset" />
	<typeAlias alias="passwordResetDto" type="com.pay.poss.passwordreset.dto.PasswordResetDto" />
	<sql id="passwordreset.paging_start">
       	<![CDATA[
       	SELECT * FROM ( SELECT rownum linenum, t1.* FROM (
       	]]>
	</sql>

	<sql id="passwordreset.paging_end">
       	<![CDATA[
       	  ) t1 WHERE rownum <= #pageEndRow# )
       		 where (linenum > #pageStartRow#)
       	]]>
	</sql>
	<insert id="createEnterprise" parameterClass="passwordReset">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
			select SEQ_PASSWORD_RESET.nextval as id from dual 
    	</selectKey>
		insert into
		t_password_reset
		(
			id ,password_type ,form_number ,status ,login_name ,proposer_name,member_name,idcard,
			proposer_obverse_url,proposer_reverse_url,legal_obverse_url ,legal_reverse_url,licence_url ,form_url,
			remark,gmt_create ,gmt_modified,creator ,modifier
		)
		values
		(
			#id#,#passwordType#,#formNumber#,#status#,#loginName#,#proposerName#,#memberName#,#idcard#,
			#proposerObverseUrl#,#proposerReverseurl#,	#legalObverseUrl#,#legalReverseUrl#,#licenceUrl#,#formUrl#,#remark#,
			sysdate,sysdate,#creator#,#modifier#
		)
	</insert>
	
	
	<sql id="enterprisePasswordResetCommon">
       	<isNotEmpty property="formNumber">
    		<![CDATA[   and tpr.form_number=#formNumber#	]]>
    	</isNotEmpty>
    	<isNotEmpty property="memberName">
    		<![CDATA[  and tpr.member_name	=#memberName#]]>
    	</isNotEmpty>
    	<isNotEmpty property="loginName">
    		<![CDATA[  and tpr.login_name	=#loginName#]]>
    	</isNotEmpty>
    	<isNotEmpty property="status">
    		<isEqual property="queryHisStatus" compareValue="0">
    			<![CDATA[  and  tpr.status =#status#	]]>
    		</isEqual>
    		<isEqual property="queryStatus" compareValue="0">
    			<![CDATA[  and  tpr.status =#status#	]]>
    		</isEqual>
    	</isNotEmpty>
    	<isEmpty property="status">
    		<isEqual property="queryHisStatus" compareValue="0">
    			<![CDATA[  and  tpr.status in(3,4,5,6)	]]>
    		</isEqual>
    		<isEqual property="queryStatus" compareValue="0">
    			<![CDATA[  and  tpr.status in(1,2)	]]>
    		</isEqual>
    	</isEmpty>
    	<isNotEmpty property="id">
    		<![CDATA[  and  tpr.id = #id# ]]>
    	</isNotEmpty>
    	 <isNotEmpty property="endDate">
			    	<![CDATA[
			    	and tpr.gmt_modified >= TO_DATE(#startDate# , 'yyyy-mm-dd ') 
	        		and tpr.gmt_modified <=TO_DATE(#endDate# , 'yyyy-mm-dd')+ 1
			    	]]>
  		</isNotEmpty>
	  	<isNotEmpty property="startDate">
	  	    <isEmpty property="endDate">
		    	<![CDATA[
		    	and tpr.gmt_modified >= TO_DATE(#startDate# , 'yyyy-mm-dd ') 
		    	and tpr.gmt_modified <= TO_DATE(#startDate# , 'yyyy-mm-dd ')+1 
		    	]]>
	     	</isEmpty>
	    </isNotEmpty>
	</sql>
	<select id="queryEnterprisePasswordReset" resultClass="passwordResetDto" parameterClass="passwordResetDto">
		<include refid="passwordreset.paging_start" />
			select  tpr.id id,
			   tpr.form_number formNumber,
		       tpr.member_name memberName,
		       tpr.login_name loginName,
		       tpr.status status,
		       decode(tpr.status,1,'未审核',2,'已审核',3,'审核登录密码成功',4,'审核登录密码失败',5,'审核支付密码成功',6,'审核支付密码失败')  statusName,
		       remark remark,
		       tpr.modifier modifier,
		       tpr.password_type passwordType,
		       to_char(tpr.gmt_modified,'yyyy-mm-dd hh24:mi:ss') strGmtModified,
		       to_char(tpr.gmt_create,'yyyy-mm-dd hh24:mi:ss') strGmtCreate,
		       tpr.gmt_modified gmtModified,
			   tpr.proposer_name proposerName,
	           tpr.idcard idcard,	         
	           tpr.proposer_obverse_url proposerObverseUrl,
	           tpr.proposer_reverse_url proposerReverseurl,
	           tpr.legal_obverse_url legalObverseUrl,
	           tpr.legal_reverse_url legalReverseUrl,
	           tpr.licence_url licenceUrl,
	           tpr.form_url formUrl
	           
	           
			  from  t_password_reset tpr
			  where 1=1
			  <include refid="enterprisePasswordResetCommon" />
			  order by tpr.gmt_create desc
		 <include refid="passwordreset.paging_end" />
	</select>
	<select id="countEnterprisePasswordReset" resultClass="java.lang.Integer" parameterClass="passwordResetDto">
		select count(tpr.id)
		  from  t_password_reset tpr
		  where 1=1
		<include refid="enterprisePasswordResetCommon" />
	</select>
	
	 <update id="updateEnterprisePasswordReset" parameterClass="passwordResetDto">
       update t_password_reset tpr  set
       		tpr.gmt_modified = sysdate,
       		<isNotEmpty property="status">
       			tpr.status = #status#,
       		</isNotEmpty>
       		<isNotEmpty property="remark">
       			tpr.remark = #remark#,
       		</isNotEmpty>
       		tpr.modifier = #modifier#
       	 where tpr.id=#id#
    </update>
	
	<insert id="createCheckCode" parameterClass="map">
		<selectKey resultClass="java.lang.Long" keyProperty="checkId">
			SELECT SEQ_CHECKCODE_ID.nextval FROM DUAL
		</selectKey>
        insert into T_CHECK_CODE (CHECK_ID, CHECK_CODE, STATUS, MEMBER_CODE, ORIGIN, EMAIL, PHONE,
            CREATE_DATE, UPDATE_DATE)
        values (#checkId#, #checkCode#, #status#, #memberCode#, #origin#, #email#, #phone#,
            sysdate, sysdate)
    </insert>	
	
	<select id="queryMemberCodeByLoginName" resultClass="passwordResetDto" parameterClass="java.lang.String">
		select 
			tm.member_code memberCode ,tm.status status
		from t_member tm 
		  where tm.status!=4
		  and tm.type=2
		  and tm.login_name= #loginName#
	</select> 
	
</sqlMap>