<?xml version="1.0" encoding="UTF-8" ?>	
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="acc-acctAttrib">

    <typeAlias alias="acctAttrib" type="com.pay.acc.acctattrib.model.AcctAttrib"/>
    
    <insert id="create" parameterClass="acctAttrib">
        insert into T_ACCT_ATTRIB
        (
       		ACCT_CODE,				
       		ALLOW_DEPOSIT,			     		
       		ALLOW_WITHDRAWAL,		
            ALLOW_TRANSFER_IN,		
            ALLOW_TRANSFER_OUT,		 
            ALLOW_IN		,		
            ALLOW_OUT,				
            DESCRIPTION	,			
            FROZEN		,			
            MEMBER_CODE		, 
            DEF_REC_ACCT 	, 
           	CUR_CODE		,
           	PAY_PWD			, 
           	CREATE_DATE		,
           	UPDATE_DATE		,
           	ACCT_LEVEL		,
           	BALANCE_BY		,
           	PAY_ABLE		,
           	ALLOW_OVERDRAFT		,
           	NEED_PROTECT	,
           	MANAGERABLE		,
           	ACCT_TYPE			,
           	MEMBER_ACCT_CODE	,
           	SUBJECT_CODE	,
           	BEAR_INTEREST	
		 )
        values
        (
			#acctCode#,
			#allowDeposit#,
			#allowWithdrawal#,
			#allowTransferIn#,
			#allowTransferOut#,
			#allowIn#,
			#allowOut#,
			#description#,
			#frozen#,
			#memberCode#,
			#defRecAcct#,
			#curCode#,
			#payPwd#,
			#createDate#,
			#updateDate#,
			#acctLevel#,
			#balanceBy#,
			#payAble#,
			#allowOverdraft#,
			#needProtect#,
			#managerable#,
			#acctType#,
			#memberAcctCode#,
			#subjectCode#,
			#bearInterest#
        )
    </insert>
    
    <select id="queryAcctAttribByAcctCode" resultClass="acctAttrib" parameterClass="java.lang.String">
     	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from 
    		T_ACCT_ATTRIB aa
    	  inner join
    	  	T_ACCT a
    	  on
    	  	a.ACCT_CODE = aa.ACCT_CODE
    	where 
    		aa.ACCT_CODE = #acctCode#
     	and
     		a.STATUS    = 1
    </select>
    
    <select id="queryAcctAttribWithAcctCode" resultClass="acctAttrib" parameterClass="java.lang.String">
     <![CDATA[
     		select 
       		ACCT_CODE				as acctCode, 
       		ALLOW_DEPOSIT			as allowDeposit,     		
       		ALLOW_WITHDRAWAL		as allowWithdrawal,
            ALLOW_TRANSFER_IN		as allowTransferIn, 
            ALLOW_TRANSFER_OUT		as allowTransferOut, 
            ALLOW_IN				as allowIn, 
            ALLOW_OUT				as allowOut, 
            DESCRIPTION				as description,
            FROZEN					as frozen,  
            MEMBER_CODE				as memberCode, 
            DEF_REC_ACCT 			as defRecAcct, 
           	CUR_CODE				as curCode,
           	PAY_PWD					as payPwd, 
           	CREATE_DATE				as createDate,
           	UPDATE_DATE				as updateDate,
           	ACCT_LEVEL				as acctLevel,
           	BALANCE_BY				as balanceBy,
           	PAY_ABLE				as payAble,
           	ALLOW_OVERDRAFT			as allowOverdraft,
           	NEED_PROTECT			as needProtect,
           	MANAGERABLE				as managerable,
           	ACCT_TYPE				as acctType,
           	MEMBER_ACCT_CODE		as memberAcctCode,
           	SUBJECT_CODE			as subjectCode,
           	BEAR_INTEREST			as bearInterest
    	from 
    		T_ACCT_ATTRIB 
    	where 
    		ACCT_CODE = #acctCode#
      ]]>    
    </select>
    
    <select id="queryAcctAttribWithMemberAcctCode" parameterClass="java.lang.Long" resultClass="acctAttrib">
    	  <![CDATA[
    	  		select 
		       		ACCT_CODE				as acctCode, 
		       		ALLOW_DEPOSIT			as allowDeposit,     		
		       		ALLOW_WITHDRAWAL		as allowWithdrawal,
		            ALLOW_TRANSFER_IN		as allowTransferIn, 
		            ALLOW_TRANSFER_OUT		as allowTransferOut, 
		            ALLOW_IN				as allowIn, 
		            ALLOW_OUT				as allowOut, 
		            DESCRIPTION				as description,
		            FROZEN					as frozen,  
		            MEMBER_CODE				as memberCode, 
		            DEF_REC_ACCT 			as defRecAcct, 
		           	CUR_CODE				as curCode,
		           	PAY_PWD					as payPwd, 
		           	CREATE_DATE				as createDate,
		           	UPDATE_DATE				as updateDate,
		           	ACCT_LEVEL				as acctLevel,
		           	BALANCE_BY				as balanceBy,
		           	PAY_ABLE				as payAble,
		           	ALLOW_OVERDRAFT			as allowOverdraft,
		           	NEED_PROTECT			as needProtect,
		           	MANAGERABLE				as managerable,
		           	ACCT_TYPE				as acctType,
		           	MEMBER_ACCT_CODE		as memberAcctCode,
		           	SUBJECT_CODE			as subjectCode,
		           	BEAR_INTEREST			as bearInterest
		    	from 
		    		T_ACCT_ATTRIB 
		    	where 
		    		MEMBER_ACCT_CODE = 		#memberAcctCode#
    	   ]]>  
    </select>
    
    <select id="countAcctAttribFreeze" parameterClass="java.lang.String" resultClass="int">
    	  <![CDATA[			
			select 1 from t_acct_attrib t 
			where t.acct_code=#acctCode#
			and  t.allow_out = 0
			and  EXISTS ( select p.OBJECT_CODE from T_POSS_OPERATE p where p.type=5 and p.status=5 and t.acct_code=p.object_code)  	  	
    	   ]]>  
    </select>
    
    <select id="countPossAcctAttrib" parameterClass="java.util.Map" resultClass="int">
    	  <![CDATA[			
				select 1 from T_POSS_OPERATE p where p.type=#type# and p.status=#status# and p.object_code=#acctCode#  	  	
    	   ]]>  
    </select>
    
    <select id="countAllowOutRecord" parameterClass="java.lang.String" resultClass="int">
    	  <![CDATA[select 1 from t_acct_attrib t 
			where t.acct_code=#acctCode#
			and  t.allow_out = 0
			and  EXISTS ( select p.OBJECT_CODE from T_POSS_OPERATE p where p.type=5 and p.status=5 and t.acct_code=p.object_code and p.login_name='api')  	  		

    	   ]]>  
    </select>
    
    <sql id="ISALLOW_ATTRIB_CONDITION">
    	<isNotEmpty property="allowDeposit" prepend="and">
			t.allow_deposit=#allowDeposit#
        </isNotEmpty> 
        <isNotEmpty property="allowWithdrawal" prepend="and">
			t.allow_withdrawal=#allowWithdrawal#
        </isNotEmpty> 
        <isNotEmpty property="allowTransferIn" prepend="and">
			t.allow_transfer_in=#allowTransferIn#
        </isNotEmpty> 
        <isNotEmpty property="allowTransferOut" prepend="and">
			t.allow_transfer_out=#allowTransferOut#
        </isNotEmpty> 
        <isNotEmpty property="allowIn" prepend="and">
			t.allow_in=#allowIn#
        </isNotEmpty> 
        <isNotEmpty property="allowOut" prepend="and">
			t.allow_out=#allowOut#
        </isNotEmpty> 
        <isNotEmpty property="payAble" prepend="and">
			t.pay_able=#payAble#
        </isNotEmpty> 
        <isNotEmpty property="allowOverdraft" prepend="and">
			t.allow_overdraft=#allowOverdraft#
        </isNotEmpty> 
        <isNotEmpty property="needProtect" prepend="and">
			t.need_protect=#needProtect#
        </isNotEmpty> 
        <isNotEmpty property="managerable" prepend="and">
			t.managerable=#managerable#
        </isNotEmpty> 
           <isNotEmpty property="allowAdvanceMoney" prepend="and">
			t.ALLOW_ADVANCE_MONEY=#allowAdvanceMoney#
        </isNotEmpty> 
    </sql>
    
    <select id="countIsAllowAcctrib" parameterClass="java.util.Map" resultClass="int">
    	select count(1) from t_acct_attrib t
		where t.acct_code=#acctCode#
     <include refid="ISALLOW_ATTRIB_CONDITION"/>
   </select>
    
   <select id="countIsAllowAcctribByMemberCode" parameterClass="java.util.Map" resultClass="int">
        select count(1) from t_acct_attrib t,t_acct a
		where a.acct_code=t.acct_code
          and a.member_code=#memberCode#
          <include refid="ISALLOW_ATTRIB_CONDITION"/>
    </select>
    
   <update id="updateAcctAttribPwd" parameterClass="java.util.Map" >
   <![CDATA[
    	UPDATE 
    		T_ACCT_ATTRIB 
    	SET 
    		PAY_PWD 	= #newPayPwd#,
    		UPDATE_DATE = SYSDATE	
    	WHERE 
    		ACCT_CODE  	= #acctCode#
  	 ]]>  
    </update>
    
    <update id="updateAcctAllowInStatus" parameterClass="java.util.Map">
    	 <![CDATA[
    	 		UPDATE 
    					T_ACCT_ATTRIB 
    			SET 
    					ALLOW_IN 	= #status#
    			WHERE 
    					ACCT_CODE  	= #acctCode#
    	  ]]>   
    </update>
    
    <update id="updateAcctAllowOutStatus" parameterClass="java.util.Map">
    	 <![CDATA[
    	 		UPDATE 
    					T_ACCT_ATTRIB 
    			SET 
    					ALLOW_OUT 	= #status#
    				
    			WHERE 
    					ACCT_CODE  	= #acctCode#    					
    	  ]]>   
    </update>
    
     <update id="updateAcctAllowOutStatusWithMemberCode" parameterClass="java.util.Map">
    	 <![CDATA[
    	 		UPDATE 
    					T_ACCT_ATTRIB B
    			SET 
    					ALLOW_OUT 	= #status#
    				
    			WHERE EXISTS(SELECT 1 FROM T_ACCT A WHERE A.ACCT_CODE=B.ACCT_CODE AND A.MEMBER_CODE=#memberCode#)
    	  ]]>   
    </update>
    
    <update id="updateAcctFreeze" parameterClass="java.util.Map">
    	 <![CDATA[
    	 		UPDATE 
    					T_ACCT_ATTRIB 
    			SET 
    					FROZEN 	= #status#
    				
    			WHERE 
    					ACCT_CODE  	= #acctCode#
    	  ]]>   
    </update>
     <select id="queryByMemberCodeAndBaseAccount" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where aa.MEMBER_CODE = #memberCode# and substr(aa.acct_type,-3) like '1%'   	
    </select>
    
    <select id="queryByMemberCodeAndAcctType" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where aa.MEMBER_CODE = #memberCode# and acct_type = #acctType#
    </select>
    
	<select id="queryDefaultAcctAttrib" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where aa.MEMBER_CODE = #memberCode# and DEF_REC_ACCT = 1
    </select>
        
    <select id="QueryAcctAttribNsTx" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where aa.MEMBER_CODE = #memberCode#
    </select>
        
	<select id="queryAcctAttribByMemberCodeAndCurrencyCode" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where aa.MEMBER_CODE = #memberCode# and CUR_CODE = #curCode#
    </select>    
    
    <select id="queryByMemberAcctCode" resultClass="acctAttrib">
    	select 
       		aa.ACCT_CODE				as acctCode, 
       		aa.ALLOW_DEPOSIT			as allowDeposit,     		
       		aa.ALLOW_WITHDRAWAL			as allowWithdrawal,
            aa.ALLOW_TRANSFER_IN		as allowTransferIn, 
            aa.ALLOW_TRANSFER_OUT		as allowTransferOut, 
            aa.ALLOW_IN					as allowIn, 
            aa.ALLOW_OUT				as allowOut, 
            aa.DESCRIPTION				as description,
            aa.FROZEN					as frozen,  
            aa.MEMBER_CODE				as memberCode, 
            aa.MEMBER_ACCT_CODE			as memberAcctCode, 
            aa.DEF_REC_ACCT 			as defRecAcct, 
           	aa.CUR_CODE					as curCode,
           	aa.PAY_PWD					as payPwd, 
           	aa.CREATE_DATE				as createDate,
           	aa.UPDATE_DATE				as updateDate,
           	aa.ACCT_LEVEL				as acctLevel,
           	aa.BALANCE_BY				as balanceBy,
           	aa.PAY_ABLE					as payAble,
           	aa.ALLOW_OVERDRAFT			as allowOverdraft,
           	aa.NEED_PROTECT				as needProtect,
           	aa.MANAGERABLE				as managerable,
           	aa.ACCT_TYPE				as acctType
    	from T_ACCT_ATTRIB aa
    	where 1=1
    	aa.MEMBER_ACCT_CODE = #memberAcctCode#
    </select>    
    
</sqlMap>