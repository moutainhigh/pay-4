package com.pay.fo.order.model.task;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PaymentTaskInfoExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public PaymentTaskInfoExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    protected PaymentTaskInfoExample(PaymentTaskInfoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table FO.PAYMENT_TASK_INFO
     *
     * @ibatorgenerated Tue Nov 01 17:25:26 CST 2011
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andSequenceIdIsNull() {
            addCriterion("SEQUENCE_ID is null");
            return this;
        }

        public Criteria andSequenceIdIsNotNull() {
            addCriterion("SEQUENCE_ID is not null");
            return this;
        }

        public Criteria andSequenceIdEqualTo(Long value) {
            addCriterion("SEQUENCE_ID =", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdNotEqualTo(Long value) {
            addCriterion("SEQUENCE_ID <>", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdGreaterThan(Long value) {
            addCriterion("SEQUENCE_ID >", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SEQUENCE_ID >=", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdLessThan(Long value) {
            addCriterion("SEQUENCE_ID <", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdLessThanOrEqualTo(Long value) {
            addCriterion("SEQUENCE_ID <=", value, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdIn(List values) {
            addCriterion("SEQUENCE_ID in", values, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdNotIn(List values) {
            addCriterion("SEQUENCE_ID not in", values, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdBetween(Long value1, Long value2) {
            addCriterion("SEQUENCE_ID between", value1, value2, "sequenceId");
            return this;
        }

        public Criteria andSequenceIdNotBetween(Long value1, Long value2) {
            addCriterion("SEQUENCE_ID not between", value1, value2, "sequenceId");
            return this;
        }

        public Criteria andTaskBatchNoIsNull() {
            addCriterion("TASK_BATCH_NO is null");
            return this;
        }

        public Criteria andTaskBatchNoIsNotNull() {
            addCriterion("TASK_BATCH_NO is not null");
            return this;
        }

        public Criteria andTaskBatchNoEqualTo(String value) {
            addCriterion("TASK_BATCH_NO =", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoNotEqualTo(String value) {
            addCriterion("TASK_BATCH_NO <>", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoGreaterThan(String value) {
            addCriterion("TASK_BATCH_NO >", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoGreaterThanOrEqualTo(String value) {
            addCriterion("TASK_BATCH_NO >=", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoLessThan(String value) {
            addCriterion("TASK_BATCH_NO <", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoLessThanOrEqualTo(String value) {
            addCriterion("TASK_BATCH_NO <=", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoLike(String value) {
            addCriterion("TASK_BATCH_NO like", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoNotLike(String value) {
            addCriterion("TASK_BATCH_NO not like", value, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoIn(List values) {
            addCriterion("TASK_BATCH_NO in", values, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoNotIn(List values) {
            addCriterion("TASK_BATCH_NO not in", values, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoBetween(String value1, String value2) {
            addCriterion("TASK_BATCH_NO between", value1, value2, "taskBatchNo");
            return this;
        }

        public Criteria andTaskBatchNoNotBetween(String value1, String value2) {
            addCriterion("TASK_BATCH_NO not between", value1, value2, "taskBatchNo");
            return this;
        }

        public Criteria andMemberCodeIsNull() {
            addCriterion("MEMBER_CODE is null");
            return this;
        }

        public Criteria andMemberCodeIsNotNull() {
            addCriterion("MEMBER_CODE is not null");
            return this;
        }

        public Criteria andMemberCodeEqualTo(Long value) {
            addCriterion("MEMBER_CODE =", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeNotEqualTo(Long value) {
            addCriterion("MEMBER_CODE <>", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeGreaterThan(Long value) {
            addCriterion("MEMBER_CODE >", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeGreaterThanOrEqualTo(Long value) {
            addCriterion("MEMBER_CODE >=", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeLessThan(Long value) {
            addCriterion("MEMBER_CODE <", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeLessThanOrEqualTo(Long value) {
            addCriterion("MEMBER_CODE <=", value, "memberCode");
            return this;
        }

        public Criteria andMemberCodeIn(List values) {
            addCriterion("MEMBER_CODE in", values, "memberCode");
            return this;
        }

        public Criteria andMemberCodeNotIn(List values) {
            addCriterion("MEMBER_CODE not in", values, "memberCode");
            return this;
        }

        public Criteria andMemberCodeBetween(Long value1, Long value2) {
            addCriterion("MEMBER_CODE between", value1, value2, "memberCode");
            return this;
        }

        public Criteria andMemberCodeNotBetween(Long value1, Long value2) {
            addCriterion("MEMBER_CODE not between", value1, value2, "memberCode");
            return this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("TASK_TYPE is null");
            return this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("TASK_TYPE is not null");
            return this;
        }

        public Criteria andTaskTypeEqualTo(Integer value) {
            addCriterion("TASK_TYPE =", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotEqualTo(Integer value) {
            addCriterion("TASK_TYPE <>", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThan(Integer value) {
            addCriterion("TASK_TYPE >", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("TASK_TYPE >=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThan(Integer value) {
            addCriterion("TASK_TYPE <", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(Integer value) {
            addCriterion("TASK_TYPE <=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeIn(List values) {
            addCriterion("TASK_TYPE in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotIn(List values) {
            addCriterion("TASK_TYPE not in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeBetween(Integer value1, Integer value2) {
            addCriterion("TASK_TYPE between", value1, value2, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("TASK_TYPE not between", value1, value2, "taskType");
            return this;
        }

        public Criteria andExcuteDateIsNull() {
            addCriterion("EXCUTE_DATE is null");
            return this;
        }

        public Criteria andExcuteDateIsNotNull() {
            addCriterion("EXCUTE_DATE is not null");
            return this;
        }

        public Criteria andExcuteDateEqualTo(Date value) {
            addCriterion("EXCUTE_DATE =", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateNotEqualTo(Date value) {
            addCriterion("EXCUTE_DATE <>", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateGreaterThan(Date value) {
            addCriterion("EXCUTE_DATE >", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateGreaterThanOrEqualTo(Date value) {
            addCriterion("EXCUTE_DATE >=", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateLessThan(Date value) {
            addCriterion("EXCUTE_DATE <", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateLessThanOrEqualTo(Date value) {
            addCriterion("EXCUTE_DATE <=", value, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateIn(List values) {
            addCriterion("EXCUTE_DATE in", values, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateNotIn(List values) {
            addCriterion("EXCUTE_DATE not in", values, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateBetween(Date value1, Date value2) {
            addCriterion("EXCUTE_DATE between", value1, value2, "excuteDate");
            return this;
        }

        public Criteria andExcuteDateNotBetween(Date value1, Date value2) {
            addCriterion("EXCUTE_DATE not between", value1, value2, "excuteDate");
            return this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("CREATE_DATE is null");
            return this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("CREATE_DATE is not null");
            return this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("CREATE_DATE =", value, "createDate");
            return this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("CREATE_DATE <>", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("CREATE_DATE >", value, "createDate");
            return this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_DATE >=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("CREATE_DATE <", value, "createDate");
            return this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_DATE <=", value, "createDate");
            return this;
        }

        public Criteria andCreateDateIn(List values) {
            addCriterion("CREATE_DATE in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateNotIn(List values) {
            addCriterion("CREATE_DATE not in", values, "createDate");
            return this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("CREATE_DATE between", value1, value2, "createDate");
            return this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_DATE not between", value1, value2, "createDate");
            return this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("UPDATE_DATE is null");
            return this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("UPDATE_DATE is not null");
            return this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterion("UPDATE_DATE =", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterion("UPDATE_DATE <>", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterion("UPDATE_DATE >", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_DATE >=", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterion("UPDATE_DATE <", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_DATE <=", value, "updateDate");
            return this;
        }

        public Criteria andUpdateDateIn(List values) {
            addCriterion("UPDATE_DATE in", values, "updateDate");
            return this;
        }

        public Criteria andUpdateDateNotIn(List values) {
            addCriterion("UPDATE_DATE not in", values, "updateDate");
            return this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterion("UPDATE_DATE between", value1, value2, "updateDate");
            return this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_DATE not between", value1, value2, "updateDate");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("STATUS =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("STATUS <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("STATUS >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("STATUS >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("STATUS <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("STATUS <=", value, "status");
            return this;
        }

        public Criteria andStatusIn(List values) {
            addCriterion("STATUS in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List values) {
            addCriterion("STATUS not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return this;
        }
    }
}